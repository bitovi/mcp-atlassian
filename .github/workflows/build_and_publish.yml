name: Build and Publish

on:
  workflow_call:
    inputs:
      image_tag:
        description: Image tag for container
        required: true
        type: string
      environment_tag:
        description: Image tag for container
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_tag }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_AI }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_AI }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build Docker image
        run: |
          docker build -t ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .

      - name: Push Docker image
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .
          docker tag ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .nv.ECR_PATH }}:${{ inputs.environment_tag }}
          docker push ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .
          docker push ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }} -f Dockerfile .environment_tag }}

  slackNotificationSuccess:
    name: Slack Notification (Success)
    environment: ${{ inputs.environment_tag }}
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: needs.build-and-publish.result == 'success'
    steps:
      - name: Send Success Notification
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "<${{ github.server_url }}/${{ github.repository }}|${{ vars.APP_NAME_NOTIFICATION }}> ${{ inputs.environment_tag}} image has been published :white_check_mark:"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Image has been published to ${{ vars.ECR_URL }}${{ vars.ECR_PATH }}:${{ inputs.image_tag }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "> Check the logs for <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|details>."

  slackNotificationFailure:
    name: Slack Notification (Failure)
    environment: ${{ inputs.environment_tag }}
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: always() && needs.build-and-publish.result == 'failure'
    steps:
      - name: Send Failure Notification
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "<${{ github.server_url }}/${{ github.repository }}|${{ vars.APP_NAME_NOTIFICATION }}> ${{ inputs.environment_tag}} image creation failed :x:"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "> Check the logs for <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|details>."
